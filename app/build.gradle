/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id('io.freefair.lombok') version '8.6'
    id('com.diffplug.spotless') version '6.25.0'
    id 'com.google.protobuf' version '0.9.4'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.63.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // App dependencies
    implementation libs.guava
    implementation 'org.apache.ratis:ratis-server:3.0.1'
    implementation 'org.apache.ratis:ratis-grpc:3.0.1'
    implementation 'org.apache.ratis:ratis-metrics-default:3.0.1'
    implementation 'org.rocksdb:rocksdbjni:9.1.1'
    implementation 'com.google.code.gson:gson:2.10.1'

    runtimeOnly 'io.grpc:grpc-netty-shaded:1.63.0'
    implementation 'io.grpc:grpc-protobuf:1.63.0'
    implementation 'io.grpc:grpc-stub:1.63.0'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+

    // Test dependencies
    testImplementation libs.junit.jupiter
    testImplementation "com.google.truth:truth:1.4.2"

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'edu.stanford.nami.App'
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

spotless {
    java {
        googleJavaFormat()
    }
}


// Creates start scripts for a class name and adds it to the distribution. The
// base class name is used to name the task and scripts. For example, passed
// the class io.grpc.examples.helloworld.HelloWorldClient, it creates the task
// helloWorldClient with script name hello-world-client.
def createStartScripts(String mainClassName) {
    String bareName = mainClassName.substring(mainClassName.lastIndexOf('.') + 1);
    String taskName = bareName.uncapitalize();
    def newTask = tasks.register(taskName, CreateStartScripts) {
        mainClass = mainClassName
        applicationName = taskName.replaceAll('([A-Z])') { '-' + it[0].uncapitalize() }
        outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
        classpath = startScripts.classpath
    }
    application {
        applicationDistribution.into('bin') {
            from(newTask)
            fileMode = 0755
        }
    }
}

createStartScripts('edu.stanford.nami.KVStoreClient')
createStartScripts('edu.stanford.nami.NamiServer')
